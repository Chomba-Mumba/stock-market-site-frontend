{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chomba Mumba\\\\OneDrive\\\\Documents\\\\repos\\\\Personal\\\\stock-market-prediction-website\\\\stock-market-site\\\\frontend\\\\src\\\\pages\\\\Home\\\\components\\\\StockGraph.tsx\";\nimport React from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Page A',\n  uv: 400,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: 'Page B',\n  uv: 300,\n  pv: 4567,\n  amt: 2400\n}, {\n  name: 'Page C',\n  uv: 200,\n  pv: 1398,\n  amt: 2400\n}, {\n  name: 'Page D',\n  uv: 278,\n  pv: 3908,\n  amt: 2400\n}, {\n  name: 'Page E',\n  uv: 189,\n  pv: 4800,\n  amt: 2400\n}, {\n  name: 'Page F',\n  uv: 239,\n  pv: 3800,\n  amt: 2400\n}, {\n  name: 'Page G',\n  uv: 349,\n  pv: 4300,\n  amt: 2400\n}];\nconst renderLineChart = /*#__PURE__*/_jsxDEV(LineChart, {\n  width: 600,\n  height: 300,\n  data: data,\n  margin: {\n    top: 5,\n    right: 20,\n    bottom: 5,\n    left: 0\n  },\n  children: [/*#__PURE__*/_jsxDEV(Line, {\n    type: \"monotone\",\n    dataKey: \"uv\",\n    stroke: \"#8884d8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n    stroke: \"#ccc\",\n    strokeDasharray: \"5 5\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n    dataKey: \"name\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\nexport function StockGraph() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StockGraph\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FTSE100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), renderLineChart]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = StockGraph;\nvar _c;\n$RefreshReg$(_c, \"StockGraph\");","map":{"version":3,"names":["React","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","jsxDEV","_jsxDEV","data","name","uv","pv","amt","renderLineChart","width","height","margin","top","right","bottom","left","children","type","dataKey","stroke","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","StockGraph","className","_c","$RefreshReg$"],"sources":["C:/Users/Chomba Mumba/OneDrive/Documents/repos/Personal/stock-market-prediction-website/stock-market-site/frontend/src/pages/Home/components/StockGraph.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\r\nconst data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400}, {name: 'Page B', uv: 300, pv: 4567, amt: 2400}, {name: 'Page C', uv: 200, pv: 1398, amt: 2400}, {name: 'Page D', uv: 278, pv: 3908, amt: 2400}, {name: 'Page E', uv: 189, pv: 4800, amt: 2400}, {name: 'Page F', uv: 239, pv: 3800, amt: 2400}, {name: 'Page G', uv: 349, pv: 4300, amt: 2400}];\r\n\r\nconst renderLineChart = (\r\n  <LineChart width={600} height={300} data={data} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n    <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\r\n    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n    <XAxis dataKey=\"name\" />\r\n    <YAxis />\r\n    <Tooltip />\r\n  </LineChart>\r\n);\r\n\r\nexport function StockGraph() {\r\n  return (\r\n    <div className=\"StockGraph\">\r\n        <h1>FTSE100</h1>\r\n      {renderLineChart}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,aAAa,EAAEC,KAAK,EAAEC,KAAK,EAAEC,OAAO,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjF,MAAMC,IAAI,GAAG,CAAC;EAACC,IAAI,EAAE,QAAQ;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,IAAI;EAAEC,GAAG,EAAE;AAAI,CAAC,EAAE;EAACH,IAAI,EAAE,QAAQ;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,IAAI;EAAEC,GAAG,EAAE;AAAI,CAAC,EAAE;EAACH,IAAI,EAAE,QAAQ;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,IAAI;EAAEC,GAAG,EAAE;AAAI,CAAC,EAAE;EAACH,IAAI,EAAE,QAAQ;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,IAAI;EAAEC,GAAG,EAAE;AAAI,CAAC,EAAE;EAACH,IAAI,EAAE,QAAQ;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,IAAI;EAAEC,GAAG,EAAE;AAAI,CAAC,EAAE;EAACH,IAAI,EAAE,QAAQ;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,IAAI;EAAEC,GAAG,EAAE;AAAI,CAAC,EAAE;EAACH,IAAI,EAAE,QAAQ;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,IAAI;EAAEC,GAAG,EAAE;AAAI,CAAC,CAAC;AAE7V,MAAMC,eAAe,gBACnBN,OAAA,CAACP,SAAS;EAACc,KAAK,EAAE,GAAI;EAACC,MAAM,EAAE,GAAI;EAACP,IAAI,EAAEA,IAAK;EAACQ,MAAM,EAAE;IAAEC,GAAG,EAAE,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,MAAM,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAE,CAAE;EAAAC,QAAA,gBAChGd,OAAA,CAACN,IAAI;IAACqB,IAAI,EAAC,UAAU;IAACC,OAAO,EAAC,IAAI;IAACC,MAAM,EAAC;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACtDrB,OAAA,CAACL,aAAa;IAACsB,MAAM,EAAC,MAAM;IAACK,eAAe,EAAC;EAAK;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACrDrB,OAAA,CAACJ,KAAK;IAACoB,OAAO,EAAC;EAAM;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACxBrB,OAAA,CAACH,KAAK;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eACTrB,OAAA,CAACF,OAAO;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACF,CACZ;AAED,OAAO,SAASE,UAAUA,CAAA,EAAG;EAC3B,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,YAAY;IAAAV,QAAA,gBACvBd,OAAA;MAAAc,QAAA,EAAI;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBf,eAAe;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACI,EAAA,GAPeF,UAAU;AAAA,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}