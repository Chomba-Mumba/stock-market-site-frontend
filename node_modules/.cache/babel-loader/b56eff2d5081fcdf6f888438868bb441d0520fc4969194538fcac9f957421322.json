{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chomba Mumba\\\\OneDrive\\\\Documents\\\\repos\\\\Personal\\\\stock-market-prediction-website\\\\stock-market-site\\\\frontend\\\\src\\\\pages\\\\Home\\\\components\\\\MarketPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './MarketPanel.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MarketPanel = () => {\n  _s();\n  const [isMarketOpen, setIsMarketOpen] = useState(false);\n  const [nextOpenDate, setNextOpenDate] = useState('');\n\n  // Set your market open/close times \n  const marketOpenTime = 8;\n  const marketCloseTime = 16.5; // 4:30 PM\n\n  useEffect(() => {\n    const checkMarketStatus = () => {\n      const now = new Date();\n      const currentHour = now.getHours() + now.getMinutes() / 60;\n      const isOpen = currentHour >= marketOpenTime && currentHour <= marketCloseTime && now.getDay() >= 1 && now.getDay() <= 5;\n      setIsMarketOpen(isOpen);\n\n      // Calculate the next open date if the market is closed\n      if (!isOpen) {\n        setNextOpenDate(calculateNextOpenDate(now));\n      }\n    };\n    const calculateNextOpenDate = date => {\n      const nextDate = new Date(date);\n      do {\n        nextDate.setDate(nextDate.getDate() + 1);\n      } while (nextDate.getDay() === 0 || nextDate.getDay() === 6); // Skip Sunday (0) and Saturday (6)\n\n      return formatDate(nextDate);\n    };\n    const formatDate = date => {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-GB', {\n        month: 'long'\n      });\n      const suffix = getDaySuffix(day);\n      return `${day}${suffix} ${month}`;\n    };\n    const getDaySuffix = day => {\n      if (day >= 11 && day <= 13) return 'th';\n      switch (day % 10) {\n        case 1:\n          return 'st';\n        case 2:\n          return 'nd';\n        case 3:\n          return 'rd';\n        default:\n          return 'th';\n      }\n    };\n    checkMarketStatus();\n\n    // Update market status every minute\n    const interval = setInterval(checkMarketStatus, 60000);\n    return () => clearInterval(interval);\n  }, []);\n  const marketMessage = isMarketOpen ? \"Market open\" : `Market closed - opens at 08:00 on ${nextOpenDate}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.marketPanel,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.imagePanel,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"photo.jpg\",\n        alt: \"IPO Forum Background\",\n        className: styles.backgroundImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.overlayContent,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Stock Market Predictive Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"14 November 2024\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.registerButton,\n          children: \"Register now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.navigation,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.arrowLeft,\n          children: \"\\u276E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.arrowRight,\n          children: \"\\u276F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tickerContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tickerContent,\n        children: [...Array(10)].map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.tickerItem,\n          children: marketMessage\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(MarketPanel, \"AVtudgies0OE13oZDJDF33DqhtE=\");\n_c = MarketPanel;\nvar _c;\n$RefreshReg$(_c, \"MarketPanel\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","MarketPanel","_s","isMarketOpen","setIsMarketOpen","nextOpenDate","setNextOpenDate","marketOpenTime","marketCloseTime","checkMarketStatus","now","Date","currentHour","getHours","getMinutes","isOpen","getDay","calculateNextOpenDate","date","nextDate","setDate","getDate","formatDate","day","month","toLocaleString","suffix","getDaySuffix","interval","setInterval","clearInterval","marketMessage","className","marketPanel","children","imagePanel","src","alt","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","overlayContent","registerButton","navigation","arrowLeft","arrowRight","tickerContainer","tickerContent","Array","map","_","index","tickerItem","_c","$RefreshReg$"],"sources":["C:/Users/Chomba Mumba/OneDrive/Documents/repos/Personal/stock-market-prediction-website/stock-market-site/frontend/src/pages/Home/components/MarketPanel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './MarketPanel.module.css';\r\n\r\nexport const MarketPanel: React.FC = () => {\r\n  const [isMarketOpen, setIsMarketOpen] = useState(false);\r\n  const [nextOpenDate, setNextOpenDate] = useState('');\r\n\r\n  // Set your market open/close times \r\n  const marketOpenTime = 8;\r\n  const marketCloseTime = 16.5; // 4:30 PM\r\n\r\n\r\n  useEffect(() => {\r\n    const checkMarketStatus = () => {\r\n      const now = new Date();\r\n      const currentHour = now.getHours() + now.getMinutes() / 60;\r\n      const isOpen = currentHour >= marketOpenTime && currentHour <= marketCloseTime && now.getDay() >= 1 && now.getDay() <= 5;\r\n      setIsMarketOpen(isOpen);\r\n\r\n      // Calculate the next open date if the market is closed\r\n      if (!isOpen) {\r\n        setNextOpenDate(calculateNextOpenDate(now));\r\n      }\r\n    };\r\n\r\n    const calculateNextOpenDate = (date: Date) => {\r\n      const nextDate = new Date(date);\r\n      do {\r\n        nextDate.setDate(nextDate.getDate() + 1);\r\n      } while (nextDate.getDay() === 0 || nextDate.getDay() === 6); // Skip Sunday (0) and Saturday (6)\r\n      \r\n      return formatDate(nextDate);\r\n    };\r\n\r\n    const formatDate = (date: Date) => {\r\n      const day = date.getDate();\r\n      const month = date.toLocaleString('en-GB', { month: 'long' });\r\n      const suffix = getDaySuffix(day);\r\n      return `${day}${suffix} ${month}`;\r\n    };\r\n\r\n    const getDaySuffix = (day: number) => {\r\n      if (day >= 11 && day <= 13) return 'th';\r\n      switch (day % 10) {\r\n        case 1: return 'st';\r\n        case 2: return 'nd';\r\n        case 3: return 'rd';\r\n        default: return 'th';\r\n      }\r\n    };\r\n\r\n    checkMarketStatus();\r\n\r\n    // Update market status every minute\r\n    const interval = setInterval(checkMarketStatus, 60000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n    const marketMessage = isMarketOpen\r\n    ? \"Market open\"\r\n    : `Market closed - opens at 08:00 on ${nextOpenDate}`;\r\n\r\n\r\n  return (\r\n    <div className={styles.marketPanel}>\r\n      <div className={styles.imagePanel}>\r\n        <img src=\"photo.jpg\" alt=\"IPO Forum Background\" className={styles.backgroundImage} />\r\n        <div className={styles.overlayContent}>\r\n          <h1>Stock Market Predictive Model</h1>\r\n          <p>14 November 2024</p>\r\n          <button className={styles.registerButton}>Register now</button>\r\n        </div>\r\n        <div className={styles.navigation}>\r\n          <button className={styles.arrowLeft}>❮</button>\r\n          <button className={styles.arrowRight}>❯</button>\r\n        </div>\r\n      </div>\r\n      <div className={styles.tickerContainer}>\r\n        <div className={styles.tickerContent}>\r\n            {/* Repeat the market message multiple times for a smooth scrolling effect */}\r\n            {[...Array(10)].map((_, index) => (\r\n            <span key={index} className={styles.tickerItem}>\r\n                {marketMessage}\r\n            </span>\r\n            ))}\r\n        </div>\r\n       </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}